<project name="ydn-db" basedir="." default="compile-dev">
    <dirname property="ydn-db.dir" file="${ant.file.ydn-db}"/>
    <property name="work.dir" location="${ydn-db.dir}/.." />
    <property name="ydn-base.dir" location="${work.dir}/ydn-base" />
    <import file="${ydn-base.dir}/build.xml"/>
    <property name="code-ver" value="36"/>
    <property name="ver" value="0.${code-ver}"/>
    <property name="out.dir" location="${work.dir}/ydn-dev/public/jsc"/>
    <property name="dev-out.fn"
              value="${ydn-db.dir}/jsc/dev-ydn.db-${ver}.js"/>
    <target name="compile-dev" description="compile JS">
        <mkdir dir="${ydn-db.dir}/jsc"/>

        <closure-compile compilationlevel="ADVANCED_OPTIMIZATIONS"
                         input="${ydn-db.dir}/js/dev.js"
                         input.dir="${ydn-db.dir}/js"
                         output.fn="${dev-out.fn}">
            <extrapaths>
                <arg line='-i "${work.dir}/ydn-base/js/main.js"'/>
                <arg line='-i "${ydn-db.dir}/js/conn.js"'/>
                <arg line='-i "${ydn-db.dir}/js/tr.js"'/>
                <arg line='-i "${ydn-db.dir}/js/core.js"'/>
                <arg line='-i "${ydn-db.dir}/js/index.js"'/>
                <arg line='-i "${ydn-db.dir}/js/main.js"'/>
                <arg line='-f "--closure_entry_point=ydn.db.Storage"'/>
                <arg line='-p "${ydn-base.dir}/js"'/>
            </extrapaths>
            <options>
                <arg line='-f "--generate_exports"'/>
                <arg line='-f "--source_map_format=V3"'/>
                <arg line='-f "--create_source_map=${dev-out.fn}.map"'/>
                <arg line='-f "--externs=${ydn-base.dir}/externs/misc.js"'/>
                <arg line='-f "--externs=${ydn-db.dir}/externs/misc.js"'/>
                <arg line='-f "--externs=${ydn-db.dir}/externs/websql.js"'/>
                <arg line='-f "--externs=${ydn-db.dir}/externs/schema.js"'/>
                <arg line='-f "--output_wrapper=${outputwrapper.norun}"'/>
            </options>
        </closure-compile>

        <concat destfile="${dev-out.fn}" append="true">
            //@ sourceMappingURL=dev-ydn.db-${ver}.js.map
        </concat>

        <replace description="replace so with online repo path"
                 file="${dev-out.fn}.map"
                 token="/Users/kyawtun/work/ydn-base/"
                 value="https://bitbucket.org/ytkyaw/ydn-base/raw/master/"/>
        <replace description="replace so with online repo path"
                 file="${dev-out.fn}.map"
                 token="/Users/kyawtun/work/ydn-db/"
                 value="https://bitbucket.org/ytkyaw/ydn-db/raw/v${code-ver}/"/>
        <replace description="replace so with online repo path"
                 file="${dev-out.fn}.map"
                 token="/Users/kyawtun/work/closure-library/"
                 value="https://raw.github.com/yathit/google-closure-library/master/"/>

        <concat destfile="${ydn-db.dir}/jsc/jquery-ydn.db-${ver}.js">
            <header>
                (function( $ ) {
            </header>
            <filelist dir="${ydn-db.dir}/jsc"
                      files="dev-ydn.db-${ver}.js"/>
        </concat>
        <concat destfile="${ydn-db.dir}/jsc/jquery-ydn.db-${ver}.js" append="true">
            $.db = new ydn.db.Storage();
            })( jQuery);
        </concat>

    </target>
    <target name="to-doc" description="copy file to documentation site">
        <copy file="${dev-out.fn}"
              tofile="${out.dir}/dev-ydn.db.js"/>
        <copy file="${dev-out.fn}.map"
              tofile="${out.dir}/dev-ydn.db.js.map"/>
        <replace file="${out.dir}/dev-ydn.db.js"
                 token="dev-ydn.db-${ver}.js.map" value="dev-ydn.db.js.map"/>
        <copy file="${ydn-db.dir}/jsc/jquery-ydn.db-${ver}.js"
              tofile="${out.dir}/jquery-ydn.db.js"/>
        <copy todir="${out.dir}/../test/">
            <fileset dir="${ydn-db.dir}/test/qunit">
               <exclude name="*.html"/>
            </fileset>
        </copy>
    </target>
    <macrodef name="adv-comp">
        <attribute name="input.fn"/>
        <attribute name="input.dir"/>
        <attribute name="output.fn"/>
        <attribute name="output.dir"/>
        <attribute name="closure.entry"/>
        <attribute name="cssmap-target" default="dummy"/>
        <element name="exjs.dir" optional="yes"/>
        <element name="ex.opt" optional="yes"/>
        <sequential>
            <closure-compile compilationlevel="ADVANCED_OPTIMIZATIONS"
                             base.dir="@{input.dir}"
                             input="@{input.fn}"
                             input.dir="@{input.dir}"
                             output.fn="@{output.dir}/@{output.fn}">
                <extrapaths>
                    <arg line='-p "${ydn-base.dir}/js"'/>
                    <arg line='-p "${ydn-db.dir}/js/ydn/db/conn"'/>
                    <exjs.dir/>
                </extrapaths>
                <options>
                    <!--<arg line='-f "-generate_exports"'/>-->
                    <arg line='-f "--externs=${ydn-db.dir}/externs/misc.js"'/>
                    <arg line='-f "--externs=${ydn-db.dir}/externs/schema.js"'/>
                    <arg line='-f "--externs=${ydn-db.dir}/externs/websql.js"'/>
                    <arg line='-f "--externs=${ydn-base.dir}/externs/misc.js"'/>
                    <arg line='-f "--closure_entry_point=@{closure.entry}"'/>
                    <arg line='-f "--define=goog.DEBUG=false"'/>
                    <arg line='-f "--output_wrapper=${outputwrapper.norun}"'/>
                    <ex.opt/>
                </options>
            </closure-compile>
        </sequential>
    </macrodef>
    <target name="simple" description="generates simple compile file">
        <mkdir dir="${ydn-db.dir}/jsc"/>
        <!--SIMPLE_OPTIMIZATIONS-->
        <closure-compile compilationlevel="WHITESPACE_ONLY"
                         base.dir="."
                         input="${ydn-db.dir}/js/main.js"
                         output.fn="${ydn-db.dir}/jsc/raw-ydn.db-${ver}.js"
                         input.dir="${ydn-db.dir}/js">
            <extrapaths>
                <arg line='-p "${ydn-base.dir}/js"'/>
                <arg line='-p "${ydn-db.dir}/js"'/>
            </extrapaths>
            <options>
                <arg line='-f "--formatting=PRETTY_PRINT"'/>
                <arg line='-f "--externs=${ydn-base.dir}/externs/misc.js"'/>
                <arg line='-f "--closure_entry_point=ydn.db.sql.Storage"'/>
            </options>
        </closure-compile>
    </target>
    <target name="compile-conn"
            description="generates compiled files for core">
        <mkdir dir="${ydn-db.dir}/jsc"/>
        <adv-comp
                input.dir="${ydn-db.dir}/js/ydn/db/conn"
                input.fn="${ydn-db.dir}/js/conn.js"
                output.dir="${ydn-db.dir}/jsc"
                output.fn="conn-ydn.db-${ver}.js"
                closure.entry="ydn.db.con.Storage">
            <exjs.dir>
                <arg line='-p "${ydn-db.dir}/js/ydn/db/base"'/>
                <arg line='-p "${ydn-db.dir}/js/ydn/db/conn"'/>
            </exjs.dir>
        </adv-comp>
    </target>
    <target name="compile-core"
            description="generates compiled files for core distribution">
        <mkdir dir="${ydn-db.dir}/jsc"/>
        <adv-comp
                input.dir="${ydn-db.dir}/js/ydn/db/core"
                input.fn="${ydn-db.dir}/js/core_main.js"
                output.dir="${ydn-db.dir}/jsc"
                output.fn="core-ydn.db-${ver}.js"
                closure.entry="ydn.db.core.Storage">
            <exjs.dir>
                <arg line='-i "${ydn-db.dir}/js/conn.js"'/>
                <arg line='-p "${ydn-db.dir}/js/ydn/db/base"'/>
                <arg line='-p "${ydn-db.dir}/js/ydn/db/conn"'/>
                <arg line='-p "${ydn-db.dir}/js/ydn/db/core"'/>
                <arg line='-p "${ydn-db.dir}/js/ydn/db/tr"'/>
            </exjs.dir>
        </adv-comp>
        <copy file="${ydn-db.dir}/jsc/core-ydn.db-${ver}.js"
              tofile="${out.dir}/core-ydn.db.js"/>
    </target>
    <target name="compile" description="generates compiled files for client js">
        <mkdir dir="${ydn-db.dir}/jsc"/>
        <adv-comp
                input.dir="${ydn-db.dir}/js"
                input.fn="${ydn-db.dir}/js/main.js"
                output.dir="${ydn-db.dir}/jsc"
                output.fn="ydn.db-${ver}.js"
                closure.entry="ydn.db.Storage">
            <ex.opt>
                <arg line='-i "${work.dir}/ydn-base/js/main.js"'/>
                <arg line='-i "${ydn-db.dir}/js/conn.js"'/>
                <arg line='-i "${ydn-db.dir}/js/core.js"'/>
                <arg line='-i "${ydn-db.dir}/js/tr.js"'/>
            </ex.opt>
        </adv-comp>
    </target>
    <target name="gen-all-test-js" description="generate all test js">
        <gen-js-test base.dir="${ydn-db.dir}/test"></gen-js-test>
    </target>
    <target name="deps" description="list dependency files">
        <delete file="${ydn-db.dir}/js/deps.js"/>
        <calc-deps
                input.dir="${ydn-db.dir}/js"
                output.fn="${ydn-db.dir}/js/deps.js">
        </calc-deps>
    </target>
    <target name="jstd" description="print out jstd file for JS test driver">
        <jstd-gen base.dir="${ydn-db.dir}">
            <deps-options>
                <arg line='--path "${ydn-base.dir}/js"'/>
            </deps-options>
        </jstd-gen>
    </target>

    <target name="jsdoc" description="create document">
        <mkdir dir="${work.dir}/ydn-dev/out/ydn-db/docs"/>
        <java jar="${jsdoc.dir}/jsrun.jar" fork="true" failonerror="true" logError="true">
            <arg line="${jsdoc.dir}/app/run.js" />
            <arg line="${ydn-db.dir}/js"/>
            <arg line="--verbose"/>
            <arg line="--recurse=6"/>
            <arg line="--template=${jsdoc.dir}/templates/jsdoc"/>
            <arg line="--directory=${work.dir}/ydn-dev/out/ydn-db/docs"/>
        </java>
    </target>
    <target name="jsdoc1" description="create document for storage class only">
        <mkdir dir="${work.dir}/ydn-dev/out/ydn-db/docs"/>
        <java jar="${jsdoc.dir}/jsrun.jar" fork="true" failonerror="true" logError="true">
            <arg line="${jsdoc.dir}/app/run.js" />
            <arg line="${ydn-db.dir}/js/ydn/db/storage.js"/>
            <arg line="--verbose"/>
            <arg line="--template=${work.dir}/ydn-dev/content/jsdoc-templates/jsdoc"/>
            <arg line="--directory=${work.dir}/ydn-dev/out/ydn-db/docs"/>
        </java>
    </target>
    <target name="build" description="build all distribution"
            depends="compile-conn,compile,simple,compile-dev,compile-core">

    </target>
</project>